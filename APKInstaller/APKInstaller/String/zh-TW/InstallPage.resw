<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutADB" xml:space="preserve">
    <value>ADB, the Android Debug Bridge, is needed for APK Installer to work. Click OK to download it. By downloading, you accept the Google Terms and Conditions for ADB.</value>
  </data>
  <data name="ADBExist" xml:space="preserve">
    <value>ADB Exist</value>
  </data>
  <data name="ADBMissing" xml:space="preserve">
    <value>ADB is missing</value>
  </data>
  <data name="AppCapabilities.HeadText" xml:space="preserve">
    <value>Capabilities: </value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CannotOpenPackage" xml:space="preserve">
    <value>Cannot open app package</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>Checking...</value>
  </data>
  <data name="CheckingADB" xml:space="preserve">
    <value>Checking ADB...</value>
  </data>
  <data name="ClickToRead" xml:space="preserve">
    <value>Click here to read them</value>
  </data>
  <data name="FindingWSA" xml:space="preserve">
    <value>Finding WSA...</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="FoundWSA" xml:space="preserve">
    <value>WSA Found</value>
  </data>
  <data name="HowToConnect" xml:space="preserve">
    <value>How to connect WSA?</value>
  </data>
  <data name="IKnow" xml:space="preserve">
    <value>知道了</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>安裝</value>
  </data>
  <data name="InstallFormat" xml:space="preserve">
    <value>Install {0}?</value>
    <comment>{0} - AppName.</comment>
  </data>
  <data name="InstallOutputTextBlock.Text" xml:space="preserve">
    <value>原因: </value>
  </data>
  <data name="InvalidPackage" xml:space="preserve">
    <value>The package is either corrupted or invalid.</value>
  </data>
  <data name="Launch" xml:space="preserve">
    <value>啟動</value>
  </data>
  <data name="LaunchingWSA" xml:space="preserve">
    <value>Launching WSA...</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="NoPackageWranning" xml:space="preserve">
    <value>For proper functioning of the app, try to launch an Android app package.</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>好的</value>
  </data>
  <data name="PackageNameFormat" xml:space="preserve">
    <value>Package Name: {0}</value>
    <comment>{0} - Package Name.</comment>
  </data>
  <data name="Reinstall" xml:space="preserve">
    <value>重新安裝</value>
  </data>
  <data name="ReinstallFormat" xml:space="preserve">
    <value>{0} is already installed</value>
    <comment>{0} - AppName.</comment>
  </data>
  <data name="ReinstallOutput" xml:space="preserve">
    <value>A newer version of {0} is already installed.</value>
    <comment>{0} - AppName.</comment>
  </data>
  <data name="StartingADB" xml:space="preserve">
    <value>Starting ADB Server...</value>
  </data>
  <data name="StartWSA" xml:space="preserve">
    <value>Start WSA</value>
  </data>
  <data name="UnzipADB" xml:space="preserve">
    <value>Unzip ADB...</value>
  </data>
  <data name="UnzipComplete" xml:space="preserve">
    <value>Unzip complete</value>
  </data>
  <data name="UnzippingFormat" xml:space="preserve">
    <value>Unzipping {0}/{1} ...</value>
    <comment>{0} - Have done num. {1} - All num.</comment>
  </data>
  <data name="Update" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="UpdateFormat" xml:space="preserve">
    <value>Update {0}?</value>
    <comment>{0} - AppName.</comment>
  </data>
  <data name="VersionFormat" xml:space="preserve">
    <value>Version: {0}</value>
    <comment>{0} - AppVersion.</comment>
  </data>
  <data name="WaitDownload" xml:space="preserve">
    <value>Wait for download...</value>
  </data>
  <data name="WaitingDevice" xml:space="preserve">
    <value>Waiting for Device...</value>
  </data>
  <data name="WaitingForInstallFormat" xml:space="preserve">
    <value>Waiting for install {0}</value>
    <comment>{0} - AppName.</comment>
  </data>
  <data name="WSARunning" xml:space="preserve">
    <value>WSA is Running</value>
  </data>
</root>